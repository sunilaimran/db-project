-- SUB QUERY : QUERY INSIDE ANOTHER QUERY


-- FIND OUT MAX SALARY FROM EMPLOYEES
SELECT MAX(SALARY)
FROM EMPLOYEES ;

SELECT FIRST_NAME
FROM EMPLOYEES
WHERE SALARY = 24000 ;

-- WE HARD CODED THE VALUE OF 24000 WE GOT FROM FIST QUERY INTO SECOND QUERY
-- NOW JUST LIKE FUNCTION CALL WE CAN USE THIS QUERY
-- AS A BLOCK OF QUERY THAT GENERATE MAX SALARY ANYTIME
-- SO EVEN IF MAX SALARY CHANGE AT SOME POINT WE WOULD GET CORRECT RESULT
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE SALARY = (    SELECT MAX(SALARY)
                    FROM EMPLOYEES
)
;
-- FIND OUT THE NAME OF THE EMPLOYEE THAT MAKE LEAST SALARY
SELECT FIRST_NAME,SALARY
FROM EMPLOYEES
WHERE SALARY =  ( SELECT MIN(SALARY) FROM EMPLOYEES ) ;

SELECT AVG(SALARY) FROM EMPLOYEES;

SELECT FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES) ;

--- DISPLAY ALL EMPLOYEES IF SALARY IS NOT 24000
--- AND FIND MAX
-- ALSO KNOWN AS (AKA) SECOND MAX SALARY
SELECT MAX(SALARY)
FROM EMPLOYEES
WHERE SALARY != ( SELECT MAX(SALARY) FROM EMPLOYEES );

-- WHAT ABOUT 3RD
SELECT MAX(SALARY)
FROM EMPLOYEES
WHERE SALARY < 17000 ;-- FILTER ALL SALARY LESS THAN 2ND MAX
--- JUST REPLACE THE 17000 with above query
SELECT MAX(SALARY)
FROM EMPLOYEES
WHERE SALARY < ( SELECT MAX(SALARY)
                 FROM EMPLOYEES
                 WHERE SALARY != ( SELECT MAX(SALARY) FROM EMPLOYEES ) );



-- find out the Department_id of Executive
SELECT DEPARTMENT_ID FROM DEPARTMENTS
WHERE DEPARTMENT_NAME = 'Executive' ;

SELECT FIRST_NAME FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90 ;

-- NOW COMBINE THEM
SELECT FIRST_NAME FROM EMPLOYEES
WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM DEPARTMENTS
                       WHERE DEPARTMENT_NAME = 'Executive') ;

-- FIND OUT THE FIRST_NAME OF EMPLOYEES
-- WHO WORKS IN Executive AND Administrative Department


-- FIND OUT THE DEPARTMENT_ID OF  Executive
-- AND Administration Department
SELECT DEPARTMENT_ID FROM DEPARTMENTS
WHERE DEPARTMENT_NAME IN ('Executive', 'Administration')
;
--- FIND OUT THE FIRST_NAME OF EMPLOYEES
-- WHO WORKS IN department_id 90 and 10
SELECT FIRST_NAME FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (10,90) ;

-- COMBINE THE RESULT

SELECT FIRST_NAME FROM EMPLOYEES
WHERE DEPARTMENT_ID IN ( SELECT DEPARTMENT_ID FROM DEPARTMENTS
                         WHERE DEPARTMENT_NAME IN ('Executive', 'Administration')  ) ;


SELECT FIRST_NAME , LAST_NAME , FIRST_NAME || LAST_NAME AS FULL_NAME
FROM EMPLOYEES
-- WHERE FULL_NAME = 'EllenAbel' WE CAN NOT USE ALIAS IN CONDITION
;

SELECT *
FROM (SELECT FIRST_NAME ,FIRST_NAME || LAST_NAME AS FULL_NAME
      FROM EMPLOYEES);


-- FIND OUT THE EMPLOYEE COUNT OF THE DEPARTMENT WITH MOST EMPLOYEE
SELECT DEPARTMENT_ID, COUNT(*) AS EMPLOYEE_COUNT
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID ;

--- -- FIND OUT THE EMPLOYEE COUNT OF THE DEPARTMENT WITH MOST EMPLOYEE
SELECT MAX(EMPLOYEE_COUNT)
FROM (SELECT DEPARTMENT_ID, COUNT(*) AS EMPLOYEE_COUNT
      FROM EMPLOYEES
      GROUP BY DEPARTMENT_ID) ;

---- DENSE_RANK FUNCTION THAT FALL INTO CATEGORY OF ANALYTICAL FUNCTIONS
-- DENSE_RANK() OVER (ORDER BY SALARY)
-- IT MEANS GENERATE RANK NUMBER FOR SALARY
-- USING SALARY DESCENDING ORDER
-- max salary get 1 , second max get 2 , third max get 3 .....
SELECT FIRST_NAME, SALARY , DENSE_RANK() OVER (ORDER BY SALARY) AS SALARY_RANK
FROM EMPLOYEES ;


-- NOW WE CAN SEE THIS WHOLE RESULT OF ABOVE QUERY AS A TABLE
-- SELECT FROM THIS "TABLE" AND FILTER THE RESULT
-- BY SALARY_RANK = NTH(the number you want)
SELECT *
FROM (SELECT FIRST_NAME, SALARY ,
             DENSE_RANK() OVER (ORDER BY SALARY DESC) AS SALARY_RANK
      FROM EMPLOYEES)
WHERE SALARY_RANK = 4 ;

CREATE TABLE EMP_SALARY_RANK AS (

    SELECT FIRST_NAME, SALARY ,
           DENSE_RANK() OVER (ORDER BY SALARY DESC) AS SALARY_RANK
    FROM EMPLOYEES

) ;

SELECT * FROM EMP_SALARY_RANK
WHERE SALARY_RANK = 4 ;

----  100 , 34, 88 , 90 , 55 , 100
----   5     1   3    4   2  ,  5
