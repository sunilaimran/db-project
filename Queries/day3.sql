-- Display all FIRST_NAME that has letter a in second character
--- '_a%'
SELECT FIRST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME LIKE '_a%';


--FROM Departments Table
-- 1.13 Display Unique LOCATION_ID
SELECT DISTINCT LOCATION_ID
FROM DEPARTMENTS;


--- FROM Locations Table
--- Count how many LOCATIONS we have
SELECT COUNT(*)
FROM LOCATIONS ;
-- 2.4 Display All Departments with DEPARTMENT_NAME Contains IT
--  exclude the exact match department name IT

--2.4    DEPARTMENT_NAME LIKE '%IT %';AKBER SOLUTION
SELECT *
FROM DEPARTMENTS
WHERE  DEPARTMENT_NAME like '%IT %' OR
        MANAGER_ID != 103;
   --OR (MANAGER_ID IS NULL AND DEPARTMENT_NAME LIKE '%IT%');

   --3.4 Display the Employee Count for EACH FIRST_NAME (yeah and observe what you got)
--Filter the grouped result to only display if the count is more than 1

SELECT FIRST_NAME, COUNT(*)
FROM EMPLOYEES
GROUP BY FIRST_NAME
HAVING COUNT(*) >1
;

SELECT EMPLOYEES.FIRST_NAME
FROM EMPLOYEES;


------ SQL JOIN ------
--- IS USED TO GET DATA FROM 2 OR MORE TABLES THAT RELATED TO EACH OTEHR
-- PRIMARY KEY AND FOREIGN KEY RELATIONSHIP

--- INNER JOIN , LEFT OUTER JOIN , RIGHT OUTER JOIN , FULL OUTER JOIN


SELECT COUNTRIES.COUNTRY_NAME , REGIONS.REGION_NAME
FROM COUNTRIES
         INNER JOIN REGIONS ON COUNTRIES.REGION_ID = REGIONS.REGION_ID ;

-- we can use alias for table to make above query slightly more readable
-- nicknames are followed by space and the letter or word
-- you can use nickname to select the columns
-- just like you did in java obj.VariableName
SELECT c.COUNTRY_NAME , r.REGION_NAME
FROM  COUNTRIES c
INNER JOIN REGIONS r ON c.REGION_ID = r.REGION_ID ;


--- FIND OUT CITY (LOCATIONS) AND COUNTRY_NAME(COUNTRIES)
-- both same result with different quries or inner join secondone is with inner join
SELECT LOCATIONS.CITY, COUNTRIES.COUNTRY_NAME
FROM LOCATIONS
         INNER JOIN COUNTRIES ON LOCATIONS.COUNTRY_ID = COUNTRIES.COUNTRY_ID ;

SELECT l.CITY, c.COUNTRY_NAME
FROM LOCATIONS l
         INNER JOIN COUNTRIES c ON l.COUNTRY_ID = c.COUNTRY_ID ;


-- DISPLAY DEPARTMENT_NAME (DEPARTMENTS) AND CITY(LOCATIONS)
--

SELECT DEPARTMENTS.DEPARTMENT_NAME, LOCATIONS.CITY
FROM DEPARTMENTS
         INNER JOIN LOCATIONS ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID ;


SELECT d.DEPARTMENT_NAME, l.CITY
FROM DEPARTMENTS d
         INNER JOIN LOCATIONS l ON d.LOCATION_ID = l.LOCATION_ID ;

SELECT EMPLOYEES.FIRST_NAME, DEPARTMENTS.DEPARTMENT_NAME
FROM EMPLOYEES
         INNER JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID;

SELECT e.FIRST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES e
INNER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID;


SELECT e.FIRST_NAME, d.DEPARTMENT_NAME
FROM EMPLOYEES e
    LEFT OUTER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID;


SELECT e.FIRST_NAME, d.DEPARTMENT_NAME
FROM EMPLOYEES e
         RIGHT OUTER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID;

--- -- WE WANT TO DISPLAY FIRST_NAME, DEPARTMENT_NAME
--- INCLUDING THOSE DEPARTMENTS THAT DOES NOT HAVE ANY MATCHING EMPLOYEES

SELECT e.FIRST_NAME, d.DEPARTMENT_NAME
FROM EMPLOYEES e
         RIGHT OUTER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID ;